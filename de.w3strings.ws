
// autogenerated tests for w3strings (require modBase-Utils)
// language: de

function _test_verifyW3strings() : int {
    var failed: int;
    failed = 0;

    // test by id
    if (!assertTrue(GetLocStringById(2110992000) == "Mods", "w3string.byId: 2110992000")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992001) == "Ghost Mode", "w3string.byId: 2110992001")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992002) == "Gegner-Gesundheitsmodifikator", "w3string.byId: 2110992002")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992003) == "Gegner-Schadensmodifikator", "w3string.byId: 2110992003")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992004) == "Gegner Skalierung", "w3string.byId: 2110992004")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992005) == "Keine (Standard)", "w3string.byId: 2110992005")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992006) == "Hochskaliert", "w3string.byId: 2110992006")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992007) == "Angeglichen", "w3string.byId: 2110992007")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992013) == "Frostwiderstand", "w3string.byId: 2110992013")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992014) == "Gegner - Schadenswiderstand Reduktion", "w3string.byId: 2110992014")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992015) == "Trankdauer", "w3string.byId: 2110992015")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992016) == "Leicht hochskaliert", "w3string.byId: 2110992016")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992017) == "Schaden pro Treffer (Silber)", "w3string.byId: 2110992017")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992018) == "Schaden pro Treffer (Stahl)", "w3string.byId: 2110992018")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992019) == "Feuersturm - Schaden pro Sekunde", "w3string.byId: 2110992019")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992020) == "Magische Falle", "w3string.byId: 2110992020")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992021) == "Schaden der Magische Falle", "w3string.byId: 2110992021")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992022) == "Dauer des magischen Geschütz", "w3string.byId: 2110992022")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992023) == "Aufladungen des magischen Geschütz", "w3string.byId: 2110992023")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992024) == "Schaden des magischen Geschütz", "w3string.byId: 2110992024")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992025) == "Zurückgeworfener Schaden", "w3string.byId: 2110992025")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992026) == "Schadensabsorption des aktiven Schilds", "w3string.byId: 2110992026")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992027) == "Axii Chance", "w3string.byId: 2110992027")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992028) == "Stärke des schnellen Angriffs", "w3string.byId: 2110992028")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992029) == "Stärke des starken Angriffs", "w3string.byId: 2110992029")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992030) == "Schadensabsorption", "w3string.byId: 2110992030")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992034) == "Kritische Trefferchance gegen Bestien", "w3string.byId: 2110992034")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992035) == "Kritische Trefferchance gegen Verfluchte", "w3string.byId: 2110992035")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992036) == "Kritische Trefferchance gegen Drakoniden", "w3string.byId: 2110992036")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992037) == "Kritische Trefferchance gegen Menschen", "w3string.byId: 2110992037")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992038) == "Kritische Trefferchance gegen Hybriden", "w3string.byId: 2110992038")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992039) == "Kritische Trefferchance gegen Insektoiden", "w3string.byId: 2110992039")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992040) == "Kritische Trefferchance gegen Konstrukte", "w3string.byId: 2110992040")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992041) == "Kritische Trefferchance gegen Nekrophagen", "w3string.byId: 2110992041")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992042) == "Kritische Trefferchance gegen Relikte", "w3string.byId: 2110992042")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992043) == "Kritische Trefferchance gegen Geister", "w3string.byId: 2110992043")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992044) == "Kritische Trefferchance gegen Ogroiden", "w3string.byId: 2110992044")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992045) == "Kritische Trefferchance gegen Vampire", "w3string.byId: 2110992045")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992046) == "Kritische Trefferstärke gegen Bestien", "w3string.byId: 2110992046")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992047) == "Kritische Trefferstärke gegen Verfluchte", "w3string.byId: 2110992047")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992048) == "Kritische Trefferstärke gegen Drakoniden", "w3string.byId: 2110992048")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992049) == "Kritische Trefferstärke gegen Menschen", "w3string.byId: 2110992049")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992050) == "Kritische Trefferstärke gegen Hybriden", "w3string.byId: 2110992050")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992051) == "Kritische Trefferstärke gegen Insektoiden", "w3string.byId: 2110992051")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992052) == "Kritische Trefferstärke gegen Konstrukte", "w3string.byId: 2110992052")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992053) == "Kritische Trefferstärke gegen Nekrophagen", "w3string.byId: 2110992053")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992054) == "Kritische Trefferstärke gegen Relikte", "w3string.byId: 2110992054")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992055) == "Kritische Trefferstärke gegen Geister", "w3string.byId: 2110992055")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992056) == "Kritische Trefferstärke gegen Ogroiden", "w3string.byId: 2110992056")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992057) == "Kritische Trefferstärke gegen Vampire", "w3string.byId: 2110992057")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992058) == "Schadenswiderstand-Reduktion gegen Bestien", "w3string.byId: 2110992058")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992059) == "Schadenswiderstand-Reduktion gegen Verfluchte", "w3string.byId: 2110992059")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992060) == "Schadenswiderstand-Reduktion gegen Drakoniden", "w3string.byId: 2110992060")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992061) == "Schadenswiderstand-Reduktion gegen Menschen", "w3string.byId: 2110992061")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992062) == "Schadenswiderstand-Reduktion gegen Hybriden", "w3string.byId: 2110992062")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992063) == "Schadenswiderstand-Reduktion gegen Insektoiden", "w3string.byId: 2110992063")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992064) == "Schadenswiderstand-Reduktion gegen Konstrukte", "w3string.byId: 2110992064")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992065) == "Schadenswiderstand-Reduktion gegen Nekrophagen", "w3string.byId: 2110992065")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992066) == "Schadenswiderstand-Reduktion gegen Relikte", "w3string.byId: 2110992066")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992067) == "Schadenswiderstand-Reduktion gegen Geister", "w3string.byId: 2110992067")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992068) == "Schadenswiderstand-Reduktion gegen Ogroiden", "w3string.byId: 2110992068")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992069) == "Schadenswiderstand-Reduktion gegen Vampire", "w3string.byId: 2110992069")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992070) == "Angriffsstärke gegen Menschen", "w3string.byId: 2110992070")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992071) == "Jedes Teil einer leichten Rüstung erhöht die kritische Trefferchance um $S$% und die kritische Trefferstärke um $S$%.", "w3string.byId: 2110992071")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992072) == "Jedes Teil einer schweren Rüstung erhöht das Maximum an Gesundheit um $S$% und den Adrenalingewinn um $S$%.", "w3string.byId: 2110992072")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992073) == "Erhöht Chance auf Verbrennung um $I$%.", "w3string.byId: 2110992073")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992074) == "Schaden bei einem starken Angriff", "w3string.byId: 2110992074")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992075) == "Schaden bei einem starken kritischen Angriff", "w3string.byId: 2110992075")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992076) == "Schaden bei einem schnellen kritischen Angriff", "w3string.byId: 2110992076")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992077) == "Kritische Trefferchance bei einem schnellen Angriff", "w3string.byId: 2110992077")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992078) == "Kritische Trefferchance bei einem starken Angriff", "w3string.byId: 2110992078")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992079) == "Schaden bei einem schnellen Angriff", "w3string.byId: 2110992079")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992080) == "Schaden bei einem starken kritischen Angriff", "w3string.byId: 2110992080")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992081) == "Schaden bei einem schnellen kritischen Angriff", "w3string.byId: 2110992081")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992082) == "Kritische Trefferchance bei einem schnellen Angriff", "w3string.byId: 2110992082")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992083) == "Schaden bei einem starken Angriff", "w3string.byId: 2110992083")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992084) == "Schaden bei einem schnellen Angriff", "w3string.byId: 2110992084")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992085) == "Schaden bei einem starken kritischen Angriff", "w3string.byId: 2110992085")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992090) == "Kritische Trefferchance und die kritische Trefferstärke gelten auch für Bomben. <br>Bomben werden ohne Verzögerung geworfen.", "w3string.byId: 2110992090")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992091) == "Jedes Öl das auf ein Schwert angewandt wird, erhöht dessen kritische Trefferchance um 5% und die kritische Trefferstärke um 10%.", "w3string.byId: 2110992091")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992092) == "Schnelle Angriffe haben eine $S$% Chance einen Blutungseffekt zu verursachen.", "w3string.byId: 2110992092")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992093) == "Alternativer Zeichen Modus:<br>Verursacht $I$ Puntkte Schaden an Gegnern in einem $I$ Meter Radius. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$). <br>Zerstört Projektile die durch das Gebiet fliegen. <br>Hält für $I$s. Geschütz Aufladungen - $I$.", "w3string.byId: 2110992093")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992094) == "Alternativer Zeichen Modus:<br>Verursacht $I$ Puntkte Schaden an Gegnern in einem $I$ Meter Radius. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$). <br>Zerstört Projektile die durch das Gebiet fliegen. <br>Hält für $I$s. Geschütz Aufladungen - $I$.", "w3string.byId: 2110992094")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992095) == "Alternativer Zeichen Modus:<br>Verursacht $I$ Puntkte Schaden an Gegnern in einem $I$ Meter Radius. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$). <br>Zerstört Projektile die durch das Gebiet fliegen. <br>Hält für $I$s. Geschütz Aufladungen - $I$.", "w3string.byId: 2110992095")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992096) == "Zwei Gegner können zur selben Zeit vom Axii Zeichen betroffen sein. <br>Effektdauer ist um $I$% reduziert.", "w3string.byId: 2110992096")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992097) == "Zwei Gegner können zur selben Zeit vom Axii Zeichen betroffen sein. <br>Effektdauer ist um $I$% reduziert.", "w3string.byId: 2110992097")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992098) == "Zwei Gegner können zur selben Zeit vom Axii Zeichen betroffen sein. <br>Effektdauer ist nicht länger reduziert.", "w3string.byId: 2110992098")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992099) == "Jeder Adrenalinpunkt erhöht die Chance um $I$% einen Gegner sofort zu töten.", "w3string.byId: 2110992099")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992102) == "Ein starker Angriff der durch jedes Schild und jeden Block geht. <br>Erteilt zusätzliche $S$% Schaden plus $S$% Schaden pro Adrenalinpunkt in Proportion zur verbrauchten Ausdauer ($S$% max).", "w3string.byId: 2110992102")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992103) == "Geralt dreht sich im Kreis und erteilt jedem Gegner im Umkreis Schaden. <br>Der Schaden ist dabei jedoch um $S$% reduziert. <br>Das Aufrechthalten des Angriffs kostet Ausdauer und Adrenalin. <br>Der erlittene Schaden ist für die Dauer des Angriffs um $S$% reduziert.", "w3string.byId: 2110992103")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992104) == "Geralt dreht sich im Kreis und erteilt jedem Gegner im Umkreis Schaden. <br>Der Schaden ist dabei jedoch um $S$% reduziert. <br>Das Aufrechthalten des Angriffs kostet Ausdauer und Adrenalin. <br>Der erlittene Schaden ist für die Dauer des Angriffs um $S$% reduziert.", "w3string.byId: 2110992104")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992105) == "Adrenalingewinn", "w3string.byId: 2110992105")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992106) == "Starke Angriffe erhöhen den Schaden der schnellen Angriffe für $S$ Sekunden um $S$% für jedes Teil des Sets und umgekehrt. <br>Derzeitiger Bonus: $S$%.", "w3string.byId: 2110992106")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992107) == "Jedes Teil des Sets reduziert die Ausdauerkosten für das Wirken von Zeichen um $S$%. <br>Derzeitiger Bonus: $S$%.", "w3string.byId: 2110992107")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992108) == "Die Größe von Yrden Fallen wird um $S$% vergrößert. <br>Solang du dich in einer Yrden Falle aufhälst ist die Zeichenintensität um $S$% erhöht und der erlittene Schaden um $S$% reduziert.", "w3string.byId: 2110992108")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992109) == "Kritische Treffer mit einem Schwert verdoppeln den Adrenalingewinn.", "w3string.byId: 2110992109")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992110) == "Chance Niedergeworfen zu werden", "w3string.byId: 2110992110")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992111) == "Die kritische Trefferchance von Armbrüsten ist um $S$% erhöht und die kritische Trefferstärke ist um $S$% erhöht. <br>Armbrust Bolzen durchdringen einen Gegner und werfen ihn zu Boden oder Betäuben ihn. <br>Gegner verlieren $S$% Gesundheit wenn sie zum Zeitpunkt des Treffers noch volle Gesundheit hatten.", "w3string.byId: 2110992111")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992112) == "Unsterblich", "w3string.byId: 2110992112")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992113) == "Wenn die Gesundheit auf Null fällt werden Adrenalinpunkte verbraucht um den Tod zu verhindern. <br>Außerdem werden für $S$s Sekunden Unverwundbarkeit und eine erhöhte Gesundheitsregeneration gewährt. <br>Stellt $S$% Gesundheit pro Adrenalinpunkt wieder her (max $S$%). <br>Kann nicht mehr als einmal aller $S$s Sekunden ausgelöst werden.", "w3string.byId: 2110992113")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992114) == "Wenn die Gesundheit auf Null fällt werden Adrenalinpunkte verbraucht um den Tod zu verhindern. <br>Außerdem werden für $S$s Sekunden Unverwundbarkeit und eine erhöhte Gesundheitsregeneration gewährt. <br>Stellt $S$% Gesundheit pro Adrenalinpunkt wieder her (max $S$%). <br>Kann nicht mehr als einmal aller $S$s Sekunden ausgelöst werden.", "w3string.byId: 2110992114")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992115) == "Wenn die Gesundheit auf Null fällt werden Adrenalinpunkte verbraucht um den Tod zu verhindern. <br>Außerdem werden für $S$s Sekunden Unverwundbarkeit und eine erhöhte Gesundheitsregeneration gewährt. <br>Stellt $S$% Gesundheit pro Adrenalinpunkt wieder her (max $S$%). <br>Kann nicht mehr als einmal aller $S$s Sekunden ausgelöst werden.", "w3string.byId: 2110992115")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992116) == "Angriffskraft für schnelle Angriffe ist um $I$% erhöht.", "w3string.byId: 2110992116")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992117) == "Angriffskraft für starke Angriffe ist um $I$% erhöht.", "w3string.byId: 2110992117")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992118) == "Erhöht die kritische Trefferchance für schnelle Angriffe um $I$% und die kritische Trefferstärke um $I$%.", "w3string.byId: 2110992118")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992119) == "Erhöht die kritische Trefferchance für starke Angriffe um $I$% und die kritische Trefferstärke um $I$%.", "w3string.byId: 2110992119")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992120) == "Perfekt abgepasste Paraden werfen Pfeile zurück und erhöhen den Schaden um $I$%.", "w3string.byId: 2110992120")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992121) == "Erfolgreich ausgeführte Konter erhöhen die Angriffsstärke des nächsten Angriffs um $I$%. <br>Jeder Adrenalinpunkt erhöht die Chance auf einen Niederschlag des Gegners um $I$% (max $I$%, Adrenalin wird verbraucht bei erfolgreichem Treffer).", "w3string.byId: 2110992121")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992122) == "Erfolgreich ausgeführte Konter erhöhen die Angriffsstärke des nächsten Angriffs um $I$%. <br>Jeder Adrenalinpunkt erhöht die Chance auf einen Niederschlag des Gegners um $I$% (max $I$%, Adrenalin wird verbraucht bei erfolgreichem Treffer). <br>Erhöht die kritische Trefferchance um $I$%.", "w3string.byId: 2110992122")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992123) == "Erfolgreich ausgeführte Konter erhöhen die Angriffsstärke des nächsten Angriffs um $I$%.", "w3string.byId: 2110992123")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992124) == "Ein Schild das solang anhält bis es $I$ Punkte Schaden absorbiert hat. <br>Schadensabsorption skaliert mit der Zeichenintensität. <br>Derzeitige Absorption: $I$ - Schilddauer: $I$s.", "w3string.byId: 2110992124")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992125) == "Schaden der von Igni zugefügt wird reduziert dauerhaft die Rüstung des Gegners pro Treffer um $S$%. <br>Skaliert mit der Zeichenintesität. <br>Der Maximale Wert von $S$% kann nicht überschritten werden.", "w3string.byId: 2110992125")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992126) == "Feuerstoß der $I$ Schaden verursacht und außerdem eine $I$% Chance hat den Gegner in Brand zu stecken. <br>Schaden erhöht sicht mit der Zeichenintensität. <br>Derzeitiger Schaden: $I$.", "w3string.byId: 2110992126")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992127) == "Alternativer Zeichen Modus:<br>Erzeugt einen konstanten fokusierten Feuerstrahl der das Ziel in Brand setzt und dabei $I$ Schaden pro Sekunde verursacht. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$). <br>Verbraucht $I$ Punkte Ausdauer pro Sekunde.", "w3string.byId: 2110992127")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992128) == "Alternativer Zeichen Modus:<br>Erzeugt einen konstanten fokusierten Feuerstrahl der das Ziel in Brand setzt und dabei $I$ Schaden pro Sekunde verursacht. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$). <br>Verbraucht $I$ Punkte Ausdauer pro Sekunde.", "w3string.byId: 2110992128")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992129) == "Alternativer Zeichen Modus:<br>Erzeugt einen konstanten fokusierten Feuerstrahl der das Ziel in Brand setzt und dabei $I$ Schaden pro Sekunde verursacht. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$). <br>Verbraucht $I$ Punkte Ausdauer pro Sekunde.", "w3string.byId: 2110992129")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992130) == "Aard verursacht jetzt $I$ Schaden. <br>Schaden erhöht sicht mit der Zeichenintensität. <br>Derzeitiger Schaden: $I$.", "w3string.byId: 2110992130")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992131) == "Magisches Geschütz", "w3string.byId: 2110992131")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992132) == "Magische Falle und Geschützdauer um $I$% erhöht, Anzahl der magischen Geschützaufladungen um $I$ erhöht.", "w3string.byId: 2110992132")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992133) == "Magische Falle und Geschützdauer um $I$% erhöht, Anzahl der magischen Geschützaufladungen um $I$ erhöht. <br>Kann nun ein weiteres mal platziert werden.", "w3string.byId: 2110992133")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992134) == "Gegner die in der Magischen Falle sind verlieren jetzt $S$% and Gesundheit oder Essenz pro Sekunde.", "w3string.byId: 2110992134")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992135) == "Das Quen Schild stößt Gegner zurück und verursacht $I$ Punkte Schaden wenn es bricht. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$).", "w3string.byId: 2110992135")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992136) == "Das Quen Schild stößt Gegner zurück und verursacht $I$ Punkte Schaden wenn es bricht, gewährt außerdem die Chance einen Gegner niederzuschlagen. <br>Schaden skaliert mit der Zeichenstärke (derzeitiger Schaden: $I$).", "w3string.byId: 2110992136")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992137) == "Alternativer Zeichen Modus:<br>Erschafft ein Schild das $I$% mehr Schaden absorbiert. <br>Es aufrecht zu halten kostet pro Sekunde $I$ Ausdauer. <br>Geblockte Angriffe verbrauchen Ausdauer proportional zum Schaden der absorbiert wurde. <br>Stellt $I$% des absorbierten Schadens in Gesundheit wieder her.", "w3string.byId: 2110992137")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992138) == "Alternativer Zeichen Modus:<br>Erschafft ein Schild das $I$% mehr Schaden absorbiert. <br>Es aufrecht zu halten kostet pro Sekunde $I$ Ausdauer. <br>Geblockte Angriffe verbrauchen Ausdauer proportional zum Schaden der absorbiert wurde. <br>Stellt $I$% des absorbierten Schadens in Gesundheit wieder her.", "w3string.byId: 2110992138")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992139) == "Alternativer Zeichen Modus:<br>Erschafft ein Schild das $I$% mehr Schaden absorbiert. <br>Es aufrecht zu halten kostet KEINE Ausdauer mehr. <br>Geblockte Angriffe verbrauchen Ausdauer proportional zum Schaden der absorbiert wurde. <br>Stellt $I$% des absorbierten Schadens in Gesundheit wieder her.", "w3string.byId: 2110992139")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992140) == "Das auftragen des richtigen Öles gewährt eine $I$% Chance dass das Ziel bei jedem Treffer vergiftet wird. Verbesserte Öle erhöhen diese Chance um $I$% und Meisterhafte erhöhen diese Chance sogar um $I$%.", "w3string.byId: 2110992140")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992141) == "Wenn die Vergiftung Geralts über 0 liegt, wird die Zeit automatisch um $S$% verlangsamt wenn ein Gegner dabei ist einen Gegenangriff auszuführen. <br>Effektdauer: $S$s.", "w3string.byId: 2110992141")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992142) == "Wenn die Vergiftung Geralts über 0 liegt, wird die Zeit automatisch um $S$% verlangsamt wenn ein Gegner dabei ist einen Gegenangriff auszuführen. <br>Effektdauer: $S$s.", "w3string.byId: 2110992142")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992143) == "Wenn die Vergiftung Geralts über 0 liegt, wird die Zeit automatisch um $S$% verlangsamt wenn ein Gegner dabei ist einen Gegenangriff auszuführen. <br>Effektdauer: $S$s.", "w3string.byId: 2110992143")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992145) == "Erlaubt es mächtige Angriffe auszuführen die $I$% mehr Schaden verursachen und $I$ auf die Rüstungsdurchdringung geben.", "w3string.byId: 2110992145")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992148) == "Jeder Punkt in Geralts Vergiftung erhöht die Angriffskraft und Zeichenintensität um $S$% (bis zu einem Maximum von $S$%).", "w3string.byId: 2110992148")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992149) == "Zeichen können kritischen Schaden verursachen. <br>Die kritische Trefferchance und Stärke erhöhen sich mit der Zeichenstärke. <br>Derzeitige kritische Trefferchance - $S$%. <br>Derzeitige kritische Trefferstärke - $S$%. <br>Gegner die durch einen kritischen Treffer getötet werden, explodieren.", "w3string.byId: 2110992149")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992150) == "Wenn das Aard Zeichen gewirkt wird besteht eine zusätzliche $S$% Chance das der Gegner eingefroren wird. <br>Gegner die niedergeschlagen und eingefroren sind, sterben sofort. <br>Gegner die nicht eingefroren sind erleiden zusätzliche $S$ Schaden. <br>Schaden erhöht sicht mit der Zeichenintensität. <br>Derzeitiger Schaden: $I$.", "w3string.byId: 2110992150")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992151) == "Eine Magische Falle die Gegner in ihrem Radius um $S$% verlangsamt. <br>Skaliertmit der Zeichenintensität. <br>Dauer der Falle: $S$s.", "w3string.byId: 2110992151")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992152) == "Zu Beginn eines Kampfes erhöht sich die Angriffskraft und Zeichenintensität um $S$% für jeden Gegner. Nach dem ersten für $S$s. Wenn man gegen $S$ Gegner kämpft ist der Bonus $S$%. <br>Wenn es abklingt reduziert sich die Angriffskraft und Zeichenintensität um $S$% für jeden Gegner nach dem ersten. Aber nicht weiter als $S$% für $S$s.", "w3string.byId: 2110992152")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992153) == "Kritische Trefferstärke Bonus", "w3string.byId: 2110992153")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992154) == "Rüstungsdurchdringung", "w3string.byId: 2110992154")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992155) == "Rüstungsdurchdringung", "w3string.byId: 2110992155")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992156) == "Vitalität-Regeneration außerhalb des Kampfs", "w3string.byId: 2110992156")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992157) == "Vitalität-Regeneration während des Kampfs", "w3string.byId: 2110992157")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992158) == "Wenn bei voller Gesundheit, erhöht jede weitere Gesundheitsregeneration den Schaden des nächsten Schwert oder Zeichangriff bis zu +$I$%.", "w3string.byId: 2110992158")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992159) == "Jedes Nahrungsmittel hält $I$% länger, schmeckt dafür aber wie Pirogge.", "w3string.byId: 2110992159")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992160) == "Wann immer ein Magisches Geschütz einen Gegner trifft wird eine Magische Falle an dieser Stelle plaziert.", "w3string.byId: 2110992160")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992161) == "Zeichenschaden", "w3string.byId: 2110992161")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992162) == "Waffenschaden", "w3string.byId: 2110992162")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992163) == "Friert Gegner ein. Treffer gegen eingefrorene Gegner fügen zusätzlichen schaden zu. Erhöhte Dauer.", "w3string.byId: 2110992163")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992164) == "Schaden erhöht", "w3string.byId: 2110992164")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992165) == "Erhöht Zeichenintensität. Erhöhte Dauer. Spezille Effekte von Zeichen halten ein drittel länger an.", "w3string.byId: 2110992165")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992166) == "Treffer während des Kampfes generieren Adrenalinpunkte. Jeder Adrenalinpunkt erhöht die Angriffsstärke um $I$%.", "w3string.byId: 2110992166")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992167) == "Kritische Trefferstärke bei schnellen Angriffen", "w3string.byId: 2110992167")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992168) == "Kritische Trefferstärke bei starken Angriffen", "w3string.byId: 2110992168")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992169) == "Geralt ist jetzt glatt rasiert", "w3string.byId: 2110992169")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992170) == "Erlaubt es dir eine leichte Armbrust zu benutzen. Nicht geziehlte Schüsse verursachen 50% weniger Schaden.", "w3string.byId: 2110992170")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992171) == "Erlaubt es dir Bomben herzustellen die auf Gegner geworfen werden können. Nicht geziehlte Würfe verursachen 50% weniger Schaden.", "w3string.byId: 2110992171")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992172) == "Zusätzlich zum normalen Kriegstrance Zustand erhöht jeder Adrenalinpunkt die Zeichenintensität um $I$%.", "w3string.byId: 2110992172")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992173) == "Wird für die Rasur benötigt.", "w3string.byId: 2110992173")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992174) == "Jedes Teil einer mittleren Rüstung erhöht die Zeichenintensität um $S$% und die Ausdauerregeneration um $S$%.", "w3string.byId: 2110992174")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992175) == "Das Ziel ist um $I$% verlangsamt während Geralt Axii wirkt. Erhöht die Effektivität von Axii in Dialogen.", "w3string.byId: 2110992175")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992176) == "Das Ziel ist um $I$% verlangsamt während Geralt Axii wirkt. Erhöht die Effektivität von Axii in Dialogen.", "w3string.byId: 2110992176")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992177) == "Das Ziel ist um $I$% verlangsamt während Geralt Axii wirkt. Fehlgeschlagene Axii-Versuche betäuben das Ziel. Erhöht die Effektivität von Axii in Dialogen.", "w3string.byId: 2110992177")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992178) == "Beschleunigt die Gesundheitsregeneration. Erhöhte Dauer. Die Gesundheitsregeneration wird nicht unterbrochen wenn Schaden erlitten wird.", "w3string.byId: 2110992178")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992179) == "Deine Überbelastung ist zu hoch", "w3string.byId: 2110992179")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992180) == "Versenke das Boot wenn überlastet", "w3string.byId: 2110992180")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992181) == "Schwellwert in % wann das Boot sinkt", "w3string.byId: 2110992181")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992182) == "Moduswechsel", "w3string.byId: 2110992182")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992183) == "Reduziere Gegenstandsgewicht (%)", "w3string.byId: 2110992183")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992184) == "Spieler Inventar Modus", "w3string.byId: 2110992184")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992185) == "Lager Modus", "w3string.byId: 2110992185")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992186) == "Gemischtes Inventar Modus", "w3string.byId: 2110992186")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992187) == "Synchronisierter Modus", "w3string.byId: 2110992187")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992188) == "Geralts maximale Gesundheit erhöht sich mit jedem Gegner den er tötet.", "w3string.byId: 2110992188")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992189) == "Enthält Silbersplitter die Gegner temporär davon abhält sich zu verwandeln und zu regenerieren.", "w3string.byId: 2110992189")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992190) == "Enthält Silbersplitter die Gegner temporär davon abhält sich zu verwandeln und zu regenerieren. Verlängerte Dauer.", "w3string.byId: 2110992190")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992191) == "Enthält Silbersplitter die Gegner dauerhaft davon abhalten sich zu verwundeln und zu regenerieren.", "w3string.byId: 2110992191")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992192) == "Erhöht die Effektivität gegen Insektoiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992192")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992193) == "Erhöht die Effektivität gegen Insektoiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992193")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992194) == "Erhöht die Effektivität gegen Insektoiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992194")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992195) == "Erhöht die Effektivität gegen Verfluchte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992195")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992196) == "Erhöht die Effektivität gegen Verfluchte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992196")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992197) == "Erhöht die Effektivität gegen Verfluchte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992197")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992198) == "Erhöht die Effektivität gegen Nekrophagen. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992198")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992199) == "Erhöht die Effektivität gegen Nekrophagen. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992199")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992200) == "Erhöht die Effektivität gegen Nekrophagen. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992200")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992201) == "Erhöht die Effektivität gegen Hybriden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992201")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992202) == "Erhöht die Effektivität gegen Hybriden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992202")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992203) == "Erhöht die Effektivität gegen Hybriden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992203")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992204) == "Erhöht die Effektivität gegen Vampire. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992204")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992205) == "Erhöht die Effektivität gegen Vampire. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992205")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992206) == "Erhöht die Effektivität gegen Vampire. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992206")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992207) == "Erhöht die Effektivität gegen Konstrukte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992207")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992208) == "Erhöht die Effektivität gegen Konstrukte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992208")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992209) == "Erhöht die Effektivität gegen Konstrukte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992209")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992210) == "Erhöht die Effektivität gegen Menschen, Elfen, Zwerge und Halblinge. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992210")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992211) == "Erhöht die Effektivität gegen Menschen, Elfen, Zwerge und Halblinge. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992211")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992212) == "Erhöht die Effektivität gegen Menschen, Elfen, Zwerge und Halblinge. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992212")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992213) == "Erhöht die Effektivität gegen Geister. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992213")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992214) == "Erhöht die Effektivität gegen Geister. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992214")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992215) == "Erhöht die Effektivität gegen Geister. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992215")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992216) == "Erhöht die Effektivität gegen Drakoniden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992216")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992217) == "Erhöht die Effektivität gegen Drakoniden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992217")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992218) == "Erhöht die Effektivität gegen Drakoniden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992218")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992219) == "Erhöht die Effektivität gegen Relikte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992219")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992220) == "Erhöht die Effektivität gegen Relikte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992220")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992221) == "Erhöht die Effektivität gegen Relikte. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992221")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992222) == "Erhöht die Effektivität gegen Ogroiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992222")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992223) == "Erhöht die Effektivität gegen Ogroiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992223")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992224) == "Erhöht die Effektivität gegen Ogroiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992224")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992225) == "Erhöht die Effektivität gegen Ogroiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992225")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992226) == "Erhöht die Effektivität gegen Ogroiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992226")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992227) == "Erhöht die Effektivität gegen Ogroiden. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992227")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992228) == "Erhöht die Effektivität gegen Bestien. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992228")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992229) == "Erhöht die Effektivität gegen Bestien. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992229")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992230) == "Erhöht die Effektivität gegen Bestien. Effektivität verringert sich wenn das Öl sich abreibt.", "w3string.byId: 2110992230")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992231) == "Entfernt jegliche Toxizität aus Geralts Blut, aber auch jeden aktiven Effekt von Tränken.", "w3string.byId: 2110992231")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992232) == "Entfernt jegliche Toxizität aus Geralts Blut, aber auch jeden aktiven Effekt von Tränken.", "w3string.byId: 2110992232")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992233) == "Entfernt jegliche Toxizität aus Geralts Blut, aber auch jeden aktiven Effekt von Tränken.", "w3string.byId: 2110992233")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992234) == "Erhöht die Effektivität gegen Relikte.", "w3string.byId: 2110992234")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992235) == "Ermöglicht es in Dunkelheit zu sehen und gewährt Immunität gegenüber Hypnose. Erhöhte Dauer.", "w3string.byId: 2110992235")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992237) == "Fügt Gegnern im Explosionsradius Schrapnelschaden zu. Verursacht Feuerschaden. Verbesserter Effekt. Zerstört Schilde von Gegnern. Zerstört Monsternester.", "w3string.byId: 2110992237")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992238) == "Setzt eine Wolke von Dimeritium Splittern frei die Magie und Mosterfähigkeiten blockiert.", "w3string.byId: 2110992238")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992239) == "Dauer der Wolke", "w3string.byId: 2110992239")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992240) == "Ermöglicht es in Dunkelheit zu sehen. Erhöhte Dauer.", "w3string.byId: 2110992240")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992241) == "Nach einem erfolgreichen starken Angriff wird sämtliche verfügbare Ausdauer verbraucht um die Gesundheit des Gegners um 5% zu reduzieren. Wenn weniger als 100% Ausdauer verbraucht wird reduziert sich der Effekt proportional.", "w3string.byId: 2110992241")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992242) == "Gewährt einen zufälligen Ort der Macht Effekt am Morgen und Abend. Hält länger als andere Absude an.", "w3string.byId: 2110992242")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992243) == "Erhöht die Zeichenintensität bei schlechten Wetter.", "w3string.byId: 2110992243")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992244) == "Erhöht den Widerstand gegen Blutungs, Brand- und Gifteffekten während des Kampfes. Je länger diese Resistenz anhält desto höher der Widerstandsboni.", "w3string.byId: 2110992244")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992245) == "Fähigkeiten die Ausdauer erfordern regenerieren proportional Gesundheit.", "w3string.byId: 2110992245")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992246) == "Erlittener Schaden erhöht den Schadenswiderstand bis zu 20% für den Rest des Kampfes.", "w3string.byId: 2110992246")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992247) == "Jeder erfolgreiche Schlag erhöht die Angriffsstärke bis zu 100% bis entweder der Kampf endet oder kein Schaden mehr erlitten wird. <br>(other than that from potion Toxicity)", "w3string.byId: 2110992247")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992248) == "Die Angriffsstärke steigt über die Dauer des Kampfes bis zu einen Maximum von 30% an.", "w3string.byId: 2110992248")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992249) == "Jedes Zeichen das gewirkt wird erhöht die Ausdauerregeneration für den Rest des Kampfes, bis zu einem Maximum von 20.", "w3string.byId: 2110992249")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992250) == "Zufällige Skalierung: Niedriger (relativ zum lvl des Spielers)", "w3string.byId: 2110992250")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992251) == "Zufällige Skalierung: Höher (relativ zum lvl des Spielers)", "w3string.byId: 2110992251")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992252) == "Zufällig", "w3string.byId: 2110992252")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992253) == "Schalte Quest Levels aus", "w3string.byId: 2110992253")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992254) == "Tiere nicht skalieren", "w3string.byId: 2110992254")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992255) == "Zufällig - Nicht herunterskalieren", "w3string.byId: 2110992255")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992256) == "Enthält unnütze Informationen.", "w3string.byId: 2110992256")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992257) == "Handwerkskomponente", "w3string.byId: 2110992257")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992258) == "Kann an Händler verkauft oder in Handwerkszutaten zerlegt werden.", "w3string.byId: 2110992258")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992259) == "Kann an Händler verkauft werden.", "w3string.byId: 2110992259")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992260) == "Kann für eine ordentliche Summe an Händler verkauft oder in Handwerkszutaten zerlegt werden.", "w3string.byId: 2110992260")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992261) == "Lagermenü", "w3string.byId: 2110992261")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992262) == "Unsterblichkeit Abklingzeit", "w3string.byId: 2110992262")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992263) == "Ausdauerregeneration Modifikator", "w3string.byId: 2110992263")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992264) == "Chance bei Treffer im Gleichgewicht zu bleiben", "w3string.byId: 2110992264")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992265) == "Chance einen Pfeil abzuwehren", "w3string.byId: 2110992265")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992266) == "Meister-Waffenschmiedewerkzeug", "w3string.byId: 2110992266")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992267) == "Schmiedewerkzeug eines Meister-Waffenschmieds. Erhöht dauerhaft den Waffenschaden.", "w3string.byId: 2110992267")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992268) == "Meister-Rüstungsschmiedewerkzeug", "w3string.byId: 2110992268")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992269) == "Schmiedewerkzeug eines Meister-Rüstungsschmieds. Erhöht dauerhaft den Rüstungswert.", "w3string.byId: 2110992269")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992270) == "Quest-Erfahrung Modifikator", "w3string.byId: 2110992270")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992271) == "Kampf-Erfahrung Modifikator", "w3string.byId: 2110992271")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992272) == "Niederschlagschance", "w3string.byId: 2110992272")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992273) == "Erhöht Schwere Niederschlagschance um $I$%.", "w3string.byId: 2110992273")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992274) == "Erhöht den Feuerschaden von Feuersturm um $I$ Punkte und den Schaden pro Sekunde um $I$ Punkte Schaden.", "w3string.byId: 2110992274")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992275) == "Erhöht den Schaden von magischen Geschützen um $I$.", "w3string.byId: 2110992275")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992276) == "Erhöht Schild-Schadensabsorption um $I$ Punkte Schaden.", "w3string.byId: 2110992276")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992277) == "Dauer der Verwirrung", "w3string.byId: 2110992277")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992278) == "Dauer der Kontrolle", "w3string.byId: 2110992278")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992279) == "Alternativer Zeichen Modus:<br>Aard trifft alle Gegner in Reichweite. Zeichenintensität ist um $I$% geringer in diesem Modus.", "w3string.byId: 2110992279")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992280) == "Alternativer Zeichen Modus:<br>Aard trifft alle Gegner in Reichweite. Zeichenintensität ist um $I$% geringer in diesem Modus.", "w3string.byId: 2110992280")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992281) == "Alternativer Zeichen Modus:<br>Aard trifft alle Gegner in Reichweite. Zeichenintensität ist nicht länger geringer in diesem Modus.", "w3string.byId: 2110992281")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992282) == "Aard verursacht jetzt $I$ Schaden. Schaden erhöht sicht mit der Zeichenintensität. Derzeitiger Schaden: $I$.", "w3string.byId: 2110992282")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992283) == "Aard verursacht jetzt $I$ Schaden. Schaden erhöht sicht mit der Zeichenintensität. Derzeitiger Schaden: $I$.", "w3string.byId: 2110992283")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992284) == "Eine Zielgerichtete Druckwelle von telekinetischer Energie die Gegner Betäubt und eine $I$% Chance auf Niederschlagen hat. <br>Schwere Niederschlagschance ist $I$%. <br>Die Chance skaliert mit der Zeichenintensität.", "w3string.byId: 2110992284")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992286) == "Vernebelt den Verstand eines Gegners, was ihn vorübergehend aus dem Kampf nimmt. <br>Verwirrungsdauer: $S$ Sekunden. <br>Skaliert mit der Zeichenintensität.", "w3string.byId: 2110992286")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992287) == "Die Dauer von Axii ist um $I$% erhöht.", "w3string.byId: 2110992287")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992288) == "Der anvisierte Gegner wird für $I$s zum Alliierten und erhält einen $I$% Bonus auf seine Angriffskraft. Effektdauer skaliert mit der Zeichenintensität. Derzeitige Dauer: $I$s.", "w3string.byId: 2110992288")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992289) == "Der anvisierte Gegner wird für $I$s zum Alliierten und erhält einen $I$% Bonus auf seine Angriffskraft. Effektdauer skaliert mit der Zeichenintensität. Derzeitige Dauer: $I$s.", "w3string.byId: 2110992289")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992290) == "Der anvisierte Gegner wird für $I$s zum Alliierten und erhält einen $I$% Bonus auf seine Angriffskraft. Effektdauer skaliert mit der Zeichenintensität. Derzeitige Dauer: $I$s.", "w3string.byId: 2110992290")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992291) == "Verursachter Schaden lädt das Schwert auf und erhöht die kritische Trefferstärke um $S$%. <br>Aufladungen verfallen über die Zeit und wenn Schaden erlitten wird. <br>Ein voll aufgeladenes Schwert erhöht die kritische Trefferchance um $S$%.", "w3string.byId: 2110992291")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992292) == "Wenn ein Gegner mit voll aufgeladenem Schwert getötet wird, wird die Aufladung aufgebraucht und der Schaden der Waffe permanet erhöht. Wenn der Bonusschaden sein Maximum überschreitet erhöht sich das Level der Waffe. <br>Schaden ist um $S$ erhöht, bis zu einem Maximum von 10.", "w3string.byId: 2110992292")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992293) == "Niederschlagschance bei starken Angriffen", "w3string.byId: 2110992293")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992294) == "Das Töten von Gegnern füllt die Ausdauer um $I$% wieder auf.", "w3string.byId: 2110992294")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992295) == "Das Töten von Gegnern gibt $F$ zu $F$ Adrenalinpunkte.", "w3string.byId: 2110992295")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992296) == "Gewährt eine $I$% Chance das $I$% des erlittenen Schadens auf den Angreifer zurückgheworfen wird.", "w3string.byId: 2110992296")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992299) == "Schaden der mit schnellen Angriffen verursacht wird lädt das Schwert auf. Wenn sich das Schwert Rot färbt kommt es zu einem mächtigen Angriff auf Kosten eines Teils der Gesundheit des Angreifers.", "w3string.byId: 2110992299")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992300) == "Feste Erfahrung für Kampf und Quests", "w3string.byId: 2110992300")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992301) == "Humanoiden", "w3string.byId: 2110992301")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992302) == "Wilde Jagd Krieger", "w3string.byId: 2110992302")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992303) == "Insgesammt", "w3string.byId: 2110992303")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992304) == "Tiere", "w3string.byId: 2110992304")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992305) == "Monster", "w3string.byId: 2110992305")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992306) == "Tötungen bei Typ", "w3string.byId: 2110992306")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992307) == "Tötungszähler", "w3string.byId: 2110992307")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992308) == "Humanoiden", "w3string.byId: 2110992308")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992309) == "Einzigartige Kreaturen", "w3string.byId: 2110992309")) failed += 1;
    if (!assertTrue(GetLocStringById(2110992310) == "Erhöht die kritische Trefferchance von Armbrüsten um $I$% und die kritische Trefferstärke von Armbrüsten um $I$%.", "w3string.byId: 2110992310")) failed += 1;

    // test by key
    if (!assertTrue(GetLocStringByKey("panel_Mods") == "Mods", "w3string.byKey: panel_Mods")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_ghost_mode") == "Ghost Mode", "w3string.byKey: panel_ghost_mode")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_health_multiplier") == "Gegner-Gesundheitsmodifikator", "w3string.byKey: option_gm_health_multiplier")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_damage_multiplier") == "Gegner-Schadensmodifikator", "w3string.byKey: option_gm_damage_multiplier")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_enemies_scaling") == "Gegner Skalierung", "w3string.byKey: option_gm_enemies_scaling")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_gm_es_none") == "Keine (Standard)", "w3string.byKey: preset_value_gm_es_none")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_gm_es_upscale") == "Hochskaliert", "w3string.byKey: preset_value_gm_es_upscale")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_gm_es_match") == "Angeglichen", "w3string.byKey: preset_value_gm_es_match")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_frost_resistance_perc") == "Frostwiderstand", "w3string.byKey: attribute_name_frost_resistance_perc")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_armor_reduction_perc") == "Gegner - Schadenswiderstand Reduktion", "w3string.byKey: attribute_name_armor_reduction_perc")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_potion_duration") == "Trankdauer", "w3string.byKey: attribute_name_potion_duration")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_gm_es_soft") == "Leicht hochskaliert", "w3string.byKey: preset_value_gm_es_soft")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_common_statistics_tooltip_silver_dph_gm") == "Schaden pro Treffer (Silber)", "w3string.byKey: panel_common_statistics_tooltip_silver_dph_gm")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_common_statistics_tooltip_steel_dph_gm") == "Schaden pro Treffer (Stahl)", "w3string.byKey: panel_common_statistics_tooltip_steel_dph_gm")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_channeling_damage_per_sec") == "Feuersturm - Schaden pro Sekunde", "w3string.byKey: gm_sign_stats_channeling_damage_per_sec")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_yrden_traps") == "Magische Falle", "w3string.byKey: gm_sign_stats_yrden_traps")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_yrden_damage") == "Schaden der Magische Falle", "w3string.byKey: gm_sign_stats_yrden_damage")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_alt_yrden_duration") == "Dauer des magischen Geschütz", "w3string.byKey: gm_sign_stats_alt_yrden_duration")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_alt_yrden_charges") == "Aufladungen des magischen Geschütz", "w3string.byKey: gm_sign_stats_alt_yrden_charges")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_alt_yrden_damage") == "Schaden des magischen Geschütz", "w3string.byKey: gm_sign_stats_alt_yrden_damage")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_alt_quen_returned_damage") == "Zurückgeworfener Schaden", "w3string.byKey: gm_sign_stats_alt_quen_returned_damage")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_alt_quen_dmg_absorption") == "Schadensabsorption des aktiven Schilds", "w3string.byKey: gm_sign_stats_alt_quen_dmg_absorption")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_alt_axii_chance") == "Axii Chance", "w3string.byKey: gm_sign_stats_alt_axii_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_combat_stats_fast_attack_power") == "Stärke des schnellen Angriffs", "w3string.byKey: gm_combat_stats_fast_attack_power")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_combat_stats_strong_attack_power") == "Stärke des starken Angriffs", "w3string.byKey: gm_combat_stats_strong_attack_power")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_quen_dmg_absorption") == "Schadensabsorption", "w3string.byKey: gm_sign_stats_quen_dmg_absorption")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsBeast_critical_hit_chance") == "Kritische Trefferchance gegen Bestien", "w3string.byKey: attribute_name_vsBeast_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsCursed_critical_hit_chance") == "Kritische Trefferchance gegen Verfluchte", "w3string.byKey: attribute_name_vsCursed_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsDraconide_critical_hit_chance") == "Kritische Trefferchance gegen Drakoniden", "w3string.byKey: attribute_name_vsDraconide_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHuman_critical_hit_chance") == "Kritische Trefferchance gegen Menschen", "w3string.byKey: attribute_name_vsHuman_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHybrid_critical_hit_chance") == "Kritische Trefferchance gegen Hybriden", "w3string.byKey: attribute_name_vsHybrid_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsInsectoid_critical_hit_chance") == "Kritische Trefferchance gegen Insektoiden", "w3string.byKey: attribute_name_vsInsectoid_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsMagicals_critical_hit_chance") == "Kritische Trefferchance gegen Konstrukte", "w3string.byKey: attribute_name_vsMagicals_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsNecrophage_critical_hit_chance") == "Kritische Trefferchance gegen Nekrophagen", "w3string.byKey: attribute_name_vsNecrophage_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsRelic_critical_hit_chance") == "Kritische Trefferchance gegen Relikte", "w3string.byKey: attribute_name_vsRelic_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsSpecter_critical_hit_chance") == "Kritische Trefferchance gegen Geister", "w3string.byKey: attribute_name_vsSpecter_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsOgre_critical_hit_chance") == "Kritische Trefferchance gegen Ogroiden", "w3string.byKey: attribute_name_vsOgre_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsVampire_critical_hit_chance") == "Kritische Trefferchance gegen Vampire", "w3string.byKey: attribute_name_vsVampire_critical_hit_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsBeast_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Bestien", "w3string.byKey: attribute_name_vsBeast_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsCursed_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Verfluchte", "w3string.byKey: attribute_name_vsCursed_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsDraconide_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Drakoniden", "w3string.byKey: attribute_name_vsDraconide_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHuman_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Menschen", "w3string.byKey: attribute_name_vsHuman_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHybrid_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Hybriden", "w3string.byKey: attribute_name_vsHybrid_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsInsectoid_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Insektoiden", "w3string.byKey: attribute_name_vsInsectoid_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsMagicals_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Konstrukte", "w3string.byKey: attribute_name_vsMagicals_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsNecrophage_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Nekrophagen", "w3string.byKey: attribute_name_vsNecrophage_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsRelic_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Relikte", "w3string.byKey: attribute_name_vsRelic_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsSpecter_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Geister", "w3string.byKey: attribute_name_vsSpecter_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsOgre_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Ogroiden", "w3string.byKey: attribute_name_vsOgre_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsVampire_critical_hit_damage_bonus") == "Kritische Trefferstärke gegen Vampire", "w3string.byKey: attribute_name_vsVampire_critical_hit_damage_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsBeast_resist_reduction") == "Schadenswiderstand-Reduktion gegen Bestien", "w3string.byKey: attribute_name_vsBeast_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsCursed_resist_reduction") == "Schadenswiderstand-Reduktion gegen Verfluchte", "w3string.byKey: attribute_name_vsCursed_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsDraconide_resist_reduction") == "Schadenswiderstand-Reduktion gegen Drakoniden", "w3string.byKey: attribute_name_vsDraconide_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHuman_resist_reduction") == "Schadenswiderstand-Reduktion gegen Menschen", "w3string.byKey: attribute_name_vsHuman_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHybrid_resist_reduction") == "Schadenswiderstand-Reduktion gegen Hybriden", "w3string.byKey: attribute_name_vsHybrid_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsInsectoid_resist_reduction") == "Schadenswiderstand-Reduktion gegen Insektoiden", "w3string.byKey: attribute_name_vsInsectoid_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsMagicals_resist_reduction") == "Schadenswiderstand-Reduktion gegen Konstrukte", "w3string.byKey: attribute_name_vsMagicals_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsNecrophage_resist_reduction") == "Schadenswiderstand-Reduktion gegen Nekrophagen", "w3string.byKey: attribute_name_vsNecrophage_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsRelic_resist_reduction") == "Schadenswiderstand-Reduktion gegen Relikte", "w3string.byKey: attribute_name_vsRelic_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsSpecter_resist_reduction") == "Schadenswiderstand-Reduktion gegen Geister", "w3string.byKey: attribute_name_vsSpecter_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsOgre_resist_reduction") == "Schadenswiderstand-Reduktion gegen Ogroiden", "w3string.byKey: attribute_name_vsOgre_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsVampire_resist_reduction") == "Schadenswiderstand-Reduktion gegen Vampire", "w3string.byKey: attribute_name_vsVampire_resist_reduction")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vsHuman_attack_power") == "Angriffsstärke gegen Menschen", "w3string.byKey: attribute_name_vsHuman_attack_power")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_stat_adrenaline_gain") == "Adrenalingewinn", "w3string.byKey: gm_stat_adrenaline_gain")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_desc_knockdownchance_mult") == "Chance Niedergeworfen zu werden", "w3string.byKey: attribute_name_desc_knockdownchance_mult")) failed += 1;
    if (!assertTrue(GetLocStringByKey("effect_undying_skill") == "Unsterblich", "w3string.byKey: effect_undying_skill")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_alt_yrden_lvl3_description") == "Magische Falle und Geschützdauer um $I$% erhöht, Anzahl der magischen Geschützaufladungen um $I$ erhöht. <br>Kann nun ein weiteres mal platziert werden.", "w3string.byKey: gm_alt_yrden_lvl3_description")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vitalityRegen") == "Vitalität-Regeneration außerhalb des Kampfs", "w3string.byKey: attribute_name_vitalityRegen")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_vitalityCombatRegen") == "Vitalität-Regeneration während des Kampfs", "w3string.byKey: attribute_name_vitalityCombatRegen")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_spell_dmg_bonus") == "Zeichenschaden", "w3string.byKey: attribute_name_spell_dmg_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_sword_dmg_bonus") == "Waffenschaden", "w3string.byKey: attribute_name_sword_dmg_bonus")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_combat_stats_fast_crit_attack_power") == "Kritische Trefferstärke bei schnellen Angriffen", "w3string.byKey: gm_combat_stats_fast_crit_attack_power")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_combat_stats_strong_crit_attack_power") == "Kritische Trefferstärke bei starken Angriffen", "w3string.byKey: gm_combat_stats_strong_crit_attack_power")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_used_razor_success") == "Geralt ist jetzt glatt rasiert", "w3string.byKey: gm_used_razor_success")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_desc_razor_mod") == "Wird für die Rasur benötigt.", "w3string.byKey: item_desc_razor_mod")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_geralt_too_heavy") == "Deine Überbelastung ist zu hoch", "w3string.byKey: gm_geralt_too_heavy")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_sink_boat_toggle") == "Versenke das Boot wenn überlastet", "w3string.byKey: option_gm_sink_boat_toggle")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_sink_boat_slider") == "Schwellwert in % wann das Boot sinkt", "w3string.byKey: option_gm_sink_boat_slider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_switch_inv_mode") == "Moduswechsel", "w3string.byKey: gm_switch_inv_mode")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_encumbrance_slider") == "Reduziere Gegenstandsgewicht (%)", "w3string.byKey: option_gm_encumbrance_slider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_normal_inv_mode") == "Spieler Inventar Modus", "w3string.byKey: gm_normal_inv_mode")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_stash_inv_mode") == "Lager Modus", "w3string.byKey: gm_stash_inv_mode")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_mixed_inv_mode") == "Gemischtes Inventar Modus", "w3string.byKey: gm_mixed_inv_mode")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_synchronized_inv_mode") == "Synchronisierter Modus", "w3string.byKey: gm_synchronized_inv_mode")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_desc_relic_oil_3") == "Erhöht die Effektivität gegen Relikte.", "w3string.byKey: item_desc_relic_oil_3")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_duration_out_of_cloud") == "Dauer der Wolke", "w3string.byKey: attribute_name_duration_out_of_cloud")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_rnd_scaling_min_slider") == "Zufällige Skalierung: Niedriger (relativ zum lvl des Spielers)", "w3string.byKey: option_gm_rnd_scaling_min_slider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_rnd_scaling_max_slider") == "Zufällige Skalierung: Höher (relativ zum lvl des Spielers)", "w3string.byKey: option_gm_rnd_scaling_max_slider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_gm_es_random") == "Zufällig", "w3string.byKey: preset_value_gm_es_random")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_no_quest_levels_toggle") == "Schalte Quest Levels aus", "w3string.byKey: option_gm_no_quest_levels_toggle")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_no_animal_upscaling_toggle") == "Tiere nicht skalieren", "w3string.byKey: option_gm_no_animal_upscaling_toggle")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_gm_es_random_no_down") == "Zufällig - Nicht herunterskalieren", "w3string.byKey: preset_value_gm_es_random_no_down")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_desc_note") == "Enthält unnütze Informationen.", "w3string.byKey: item_desc_note")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_recycling_parts") == "Handwerkskomponente", "w3string.byKey: gm_recycling_parts")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_desc_junk_no_ingr") == "Kann an Händler verkauft werden.", "w3string.byKey: item_desc_junk_no_ingr")) failed += 1;
    if (!assertTrue(GetLocStringByKey("PanelStash") == "Lagermenü", "w3string.byKey: PanelStash")) failed += 1;
    if (!assertTrue(GetLocStringByKey("effect_undying_cooldown") == "Unsterblichkeit Abklingzeit", "w3string.byKey: effect_undying_cooldown")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_staminaRegen_armor_mod") == "Ausdauerregeneration Modifikator", "w3string.byKey: attribute_name_staminaRegen_armor_mod")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_chanceToIgnoreHitAnim") == "Chance bei Treffer im Gleichgewicht zu bleiben", "w3string.byKey: attribute_name_chanceToIgnoreHitAnim")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_q108_bounce_arrows") == "Chance einen Pfeil abzuwehren", "w3string.byKey: attribute_name_q108_bounce_arrows")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_name_repair_kit_weapon_4") == "Meister-Waffenschmiedewerkzeug", "w3string.byKey: item_name_repair_kit_weapon_4")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_desc_repair_kit_weapon_4") == "Schmiedewerkzeug eines Meister-Waffenschmieds. Erhöht dauerhaft den Waffenschaden.", "w3string.byKey: item_desc_repair_kit_weapon_4")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_name_repair_kit_armor_4") == "Meister-Rüstungsschmiedewerkzeug", "w3string.byKey: item_name_repair_kit_armor_4")) failed += 1;
    if (!assertTrue(GetLocStringByKey("item_desc_repair_kit_armor_4") == "Schmiedewerkzeug eines Meister-Rüstungsschmieds. Erhöht dauerhaft den Rüstungswert.", "w3string.byKey: item_desc_repair_kit_armor_4")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_quest_exp_slider") == "Quest-Erfahrung Modifikator", "w3string.byKey: option_gm_quest_exp_slider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_monster_exp_slider") == "Kampf-Erfahrung Modifikator", "w3string.byKey: option_gm_monster_exp_slider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("attribute_name_knockdown") == "Niederschlagschance", "w3string.byKey: attribute_name_knockdown")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_axii_duration_confusion") == "Dauer der Verwirrung", "w3string.byKey: gm_sign_stats_axii_duration_confusion")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_axii_duration_control") == "Dauer der Kontrolle", "w3string.byKey: gm_sign_stats_axii_duration_control")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_sign_stats_heavy_knockdown") == "Niederschlagschance bei starken Angriffen", "w3string.byKey: gm_sign_stats_heavy_knockdown")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_gm_use_xml_exp_toggle") == "Feste Erfahrung für Kampf und Quests", "w3string.byKey: option_gm_use_xml_exp_toggle")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_humans") == "Humanoiden", "w3string.byKey: gm_kills_humans")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_wh_warriors") == "Wilde Jagd Krieger", "w3string.byKey: gm_kills_wh_warriors")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_total") == "Insgesammt", "w3string.byKey: gm_kills_total")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_animals_total") == "Tiere", "w3string.byKey: gm_kills_animals_total")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_monsters_total") == "Monster", "w3string.byKey: gm_kills_monsters_total")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_by_type") == "Tötungen bei Typ", "w3string.byKey: gm_kills_by_type")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_kill_count") == "Tötungszähler", "w3string.byKey: gm_kills_kill_count")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_humans_total") == "Humanoiden", "w3string.byKey: gm_kills_humans_total")) failed += 1;
    if (!assertTrue(GetLocStringByKey("gm_kills_bosses_total") == "Einzigartige Kreaturen", "w3string.byKey: gm_kills_bosses_total")) failed += 1;

    // return number of failed
    return failed;
}

exec function test_verifyW3Strings() {
    logTestResult("Verify W3Strings", _test_verifyW3strings(), true);
}
